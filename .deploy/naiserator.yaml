kind: Application
apiVersion: nais.io/v1alpha1
metadata:
  name: fpfordel
  namespace: teamforeldrepenger
  labels:
    team: teamforeldrepenger
spec:
  image: {{image}}
  port: 8080
  ingresses:
{{#each ingresses as |url|}}
    - {{url}}
{{/each}}
  liveness:
    path: /fpfordel/internal/health/isAlive
    initialDelay: 10
    periodSeconds: 10
    failureThreshold: 20
    timeout: 3
  readiness:
    path: /fpfordel/internal/health/isReady
    initialDelay: 10
    periodSeconds: 10
    failureThreshold: 20
    timeout: 3
  preStopHook:
    http:
      path: /fpfordel/internal/health/preStop
  prometheus:
    enabled: true
    path: /fpfordel/internal/metrics/prometheus
  replicas:
    min: {{minReplicas}}
    max: {{maxReplicas}}
    scalingStrategy:
      cpu:
        thresholdPercentage: 80
  resources:
    limits:
      cpu: "{{limits.cpu}}"
      memory: "{{limits.mem}}"
    requests:
      cpu: "{{requests.cpu}}"
      memory: "{{requests.mem}}"
  vault:
    enabled: true
    paths:
    - kvPath: {{oraclecredskv}}
      mountPath: /var/run/secrets/nais.io/defaultDS
    - kvPath: {{oracleconfigkv}}
      mountPath: /var/run/secrets/nais.io/defaultDSconfig
    - kvPath: {{serviceuserkv}}
      mountPath: /var/run/secrets/nais.io/serviceuser
  tokenx:
    enabled: true
  kafka:
    pool: {{kafkaPool}}
  azure:
    application:
      enabled: true
      claims:
        extra:
          - "NAVident"
          - "azp_name"
        groups:
          {{#each groups as |group|}}
          - id: "{{group}}"
          {{/each}}
  {{#if AZURE_IAC_RULES}}
  accessPolicy:
    inbound:
      rules:
      {{#each AZURE_IAC_RULES}}
      - application: {{app}}
        namespace: {{namespace}}
        cluster: {{cluster}}
        {{#if scopes}}
        permissions:
          scopes:
          {{#each scopes}}
            - "{{this}}"
          {{/each}}
        {{/if}}
      {{/each}}
  {{/if}}
